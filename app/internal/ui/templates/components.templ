
package templates

templ NoticeAlert() {
	<div class="alert alert-warning">
		<b><svg aria-hidden="true" focusable="false" viewBox="0 0 16 16" width="16" height="16" fill="currentColor" display="inline-block" overflow="visible" style="vertical-align: text-bottom;"><path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path></svg> 
        Note</b>
        <br/><br/>
		{ children... }
	</div>
}

templ ErrorAlert(message string) {
	<div class="alert alert-error">
		{ message }
	</div>
}

templ SuccessAlert(message string) {
	<div class="alert alert-success">
		{ message }
	</div>
}

templ ClearAlerts() {

}

templ SignalMetadataItem(label, value string) {
	<div class="signal-metadata-item">
		<div class="signal-metadata-label">{ label }:</div>
		<div class="signal-metadata-value">{ value }</div>
	</div>
}

templ SignalMetadataSimple(label, value string) {
	<div class="signal-metadata-item">
		<span class="signal-metadata-label">{ label }:</span> { value }
	</div>
}

templ CheckboxField(name, value, label string) {
	<label class="checkbox-field">
		<input type="checkbox" name={ name } value={ value } class="checkbox-input"/>
		<span class="text-sm">{ label }</span>
	</label>
}


// use this script for any page that needs copy to clipboard functionality.
// the button should be defined as:
//
// <button class="btn, btn-copy" data-text={ data.Yourdata } onclick="copyText(this.dataset.text, this)">Copy</button>
templ CopyToClipboardFunction() {
  <script>
		// Copy text function for copy buttons
		function copyText(text, btn) {
			navigator.clipboard.writeText(text).then(() => {
				btn.textContent = 'âœ“ Copied!';
				btn.classList.add('btn-success');
				btn.disabled = true;
				setTimeout(() => {
					btn.textContent = 'Copy';
					btn.classList.remove('btn-success');
					btn.disabled = false;
				}, 1500);
			}).catch(err => {
				console.error('Failed to copy text: ', err);
				btn.textContent = 'Failed';
				btn.classList.add('btn-error');
				setTimeout(() => {
					btn.textContent = 'Copy';
					btn.classList.remove('btn-error');
				}, 1500);
			});
        }
    </script>
}