// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943

package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func AdminDashboardPage(environment string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = Navigation(environment).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, " <div class=\"page-container\"><h1 class=\"page-title\">Site Management</h1><p class=\"card-description text-muted\">Manage Information Sharing Networks and user access.</p><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\"><!-- Site Access --><div class=\"card\"><div class=\"card-body\"><h3 class=\"card-title\">Site access controls</h3><p class=\"card-description text-muted\">Site-wide account management.</p><a href=\"/admin/accounts/status\" class=\"btn btn-primary\">Enable/Disable Accounts</a> <a href=\"/admin/isn/transfer-ownership\" class=\"btn btn-primary\">Transfer ISN Ownership</a> <a href=\"/admin/accounts/admin-role\" class=\"btn btn-primary\">Manage Admin Roles</a></div></div><!-- ISN Configuration --><div class=\"card\"><div class=\"card-body\"><h3 class=\"card-title\">ISN Configuration</h3><p class=\"card-description text-muted\">Manage Information Sharing Networks.</p><a href=\"/admin/isn/create\" class=\"btn btn-primary\">Create an ISN</a> <a href=\"/admin/isn/accounts/update\" class=\"btn btn-primary\">Manage ISN Access</a> <a href=\"/admin/isn/status\" class=\"btn btn-primary\">Enable/Disable ISNs</a></div></div><!-- Signal Types --><div class=\"card\"><div class=\"card-body\"><h3 class=\"card-title\">Signal Types</h3><p class=\"card-description text-muted\">Register the types of signal used in an ISN.</p><a href=\"/admin/signal-types/create\" class=\"btn btn-primary\">Create Signal Types</a> <a href=\"/admin/signal-types/register-new-schema\" class=\"btn btn-primary\">Register a New Schema</a> <a href=\"/admin/signal-types/status\" class=\"btn btn-primary\">Enable/Disable Signal Types</a></div></div><!-- User Management --><div class=\"card\"><div class=\"card-body\"><h3 class=\"card-title\">User Management</h3><p class=\"card-description text-muted\">Manage user accounts.</p><a href=\"/admin/users/generate-password-reset-link\" class=\"btn btn-primary\">Generate Password Link</a></div></div><!-- Service Accounts --><div class=\"card\"><div class=\"card-body\"><h3 class=\"card-title\">Service Account Management</h3><p class=\"card-description text-muted\">Manage API service accounts and credentials.</p><a href=\"/admin/service-accounts/create\" class=\"btn btn-primary\">Create Service Accounts</a> <a href=\"/admin/service-accounts/reissue-credentials\" class=\"btn btn-primary\">Reissue Credentials</a></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = BaseLayout("Site Mangement").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
