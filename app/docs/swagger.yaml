consumes:
- application/json
definitions:
  apperrors.ErrorCode:
    enum:
    - access_token_expired
    - authentication_error
    - authorization_error
    - database_error
    - forbidden
    - internal_error
    - invalid_request
    - malformed_body
    - not_implemented
    - password_too_short
    - refresh_token_expired
    - refresh_token_revoked
    - resource_already_exists
    - resource_not_found
    - signal_type_closed
    - token_error
    - user_alread_exists
    - user_not_found
    type: string
    x-enum-varnames:
    - ErrCodeAccessTokenExpired
    - ErrCodeAuthenticationFailure
    - ErrCodeAuthorizationFailure
    - ErrCodeDatabaseError
    - ErrCodeForbidden
    - ErrCodeInternalError
    - ErrCodeInvalidRequest
    - ErrCodeMalformedBody
    - ErrCodeNotImplemented
    - ErrCodePasswordTooShort
    - ErrCodeRefreshTokenExpired
    - ErrCodeRefreshTokenRevoked
    - ErrCodeResourceAlreadyExists
    - ErrCodeResourceNotFound
    - ErrCodeSignalTypeClosed
    - ErrCodeTokenError
    - ErrCodeUserAlreadyExists
    - ErrCodeUserNotFound
  database.GetForDisplayIsnReceiverByIsnIDRow:
    properties:
      created_at:
        type: string
      default_rate_limit:
        type: integer
      listener_count:
        type: integer
      max_daily_validation_failures:
        type: integer
      max_payload_kilobytes:
        type: integer
      payload_validation:
        type: string
      receiver_status:
        type: string
      updated_at:
        type: string
    type: object
  database.GetForDisplayIsnRetrieverByIsnIDRow:
    properties:
      created_at:
        type: string
      default_rate_limit:
        type: integer
      listener_count:
        type: integer
      retriever_status:
        type: string
      updated_at:
        type: string
    type: object
  database.GetForDisplayUserByIsnIDRow:
    properties:
      account_id:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  database.GetIsnReceiverByIsnSlugRow:
    properties:
      created_at:
        type: string
      default_rate_limit:
        type: integer
      isn_id:
        type: string
      isn_is_in_use:
        type: boolean
      listener_count:
        type: integer
      max_daily_validation_failures:
        type: integer
      max_payload_kilobytes:
        type: integer
      payload_validation:
        type: string
      receiver_status:
        type: string
      updated_at:
        type: string
    type: object
  database.GetIsnRetrieverByIsnSlugRow:
    properties:
      created_at:
        type: string
      default_rate_limit:
        type: integer
      isn_id:
        type: string
      isn_is_in_use:
        type: boolean
      listener_count:
        type: integer
      retriever_status:
        type: string
      updated_at:
        type: string
    type: object
  database.GetUserByIDRow:
    properties:
      account_id:
        type: string
      created_at:
        type: string
      email:
        type: string
    type: object
  database.GetUsersRow:
    properties:
      account_id:
        type: string
      created_at:
        type: string
      email:
        type: string
      updated_at:
        type: string
    type: object
  database.Isn:
    properties:
      created_at:
        type: string
      detail:
        type: string
      id:
        type: string
      is_in_use:
        type: boolean
      slug:
        type: string
      storage_connection_url:
        type: string
      storage_type:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_account_id:
        type: string
      visibility:
        type: string
    type: object
  database.SignalType:
    properties:
      created_at:
        type: string
      detail:
        type: string
      id:
        type: string
      isn_id:
        type: string
      readme_url:
        type: string
      schema_url:
        type: string
      sem_ver:
        type: string
      slug:
        type: string
      stage:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  handlers.CreateIsnReceiverRequest:
    properties:
      default_rate_limit:
        description: maximum number of requests per minute per session
        example: 600
        type: integer
      isn_slug:
        example: sample-isn--example-org
        type: string
      listener_count:
        example: 1
        type: integer
      max_daily_validation_failures:
        description: default = 0
        example: 5
        type: integer
      max_payload_kilobytes:
        example: 50
        type: integer
      payload_validation:
        enum:
        - always
        - never
        - optional
        example: always
        type: string
    type: object
  handlers.CreateIsnReceiverResponse:
    properties:
      resource_url:
        example: http://localhost:8080/api/isn/sample-isn--example-org/signals/receiver
        type: string
    type: object
  handlers.CreateIsnRequest:
    properties:
      detail:
        example: Sample ISN description
        type: string
      is_in_use:
        example: true
        type: boolean
      storage_connection_url:
        example: postgres:/signalsd:@localhost:5432/signals?sslmode=disable
        type: string
      storage_type:
        example: mq
        type: string
      title:
        example: Sample ISN @example.org
        type: string
      visibility:
        enum:
        - public
        - private
        example: private
        type: string
    type: object
  handlers.CreateIsnResponse:
    properties:
      id:
        example: 67890684-3b14-42cf-b785-df28ce570400
        type: string
      resource_url:
        example: http://localhost:8080/api/isn/sample-isn--example-org
        type: string
      slug:
        example: sample-isn--example-org
        type: string
    type: object
  handlers.CreateIsnRetrieverRequest:
    properties:
      default_rate_limit:
        description: maximum number of requests per minute per session
        example: 600
        type: integer
      isn_slug:
        example: sample-isn--example-org
        type: string
      listener_count:
        example: 1
        type: integer
    type: object
  handlers.CreateIsnRetrieverResponse:
    properties:
      resource_url:
        example: http://localhost:8080/api/isn/sample-isn--example-org/signals/retriever
        type: string
    type: object
  handlers.CreateSignalTypeRequest:
    properties:
      bump_type:
        description: this is used to increment semver for the signal definition
        enum:
        - major
        - minor
        - patch
        example: patch
        type: string
      detail:
        description: updated description
        example: description
        type: string
      isn_slug:
        example: sample-isn--example-org
        type: string
      readme_url:
        description: Updated readme file. Note file must be on a public github repo
        example: https://github.com/user/project/v0.0.1/locales/filename.md
        type: string
      schema_url:
        description: Note file must be on a public github repo
        example: https://github.com/user/project/v0.0.1/locales/filename.json
        type: string
      stage:
        description: updated stage
        enum:
        - dev
        - test
        - live
        - deprecated
        - closed
        - shuttered
        type: string
      title:
        description: unique title
        example: Sample Signal @example.org
        type: string
    type: object
  handlers.CreateSignalTypeResponse:
    properties:
      resource_url:
        example: http://localhost:8080/api/isn/sample-isn--example-org/signals_types/sample-signal--example-org/v0.0.1
        type: string
      sem_ver:
        example: 0.0.1
        type: string
      slug:
        example: sample-signal--example-org
        type: string
    type: object
  handlers.CreateUserRequest:
    properties:
      email:
        example: example@example.com
        type: string
      password:
        description: passwords must be at least 11 characters long
        example: lkIB53@6O^Y
        type: string
    type: object
  handlers.IsnAndLinkedInfo:
    properties:
      created_at:
        type: string
      detail:
        type: string
      id:
        type: string
      is_in_use:
        type: boolean
      isn_receiver:
        $ref: '#/definitions/database.GetForDisplayIsnReceiverByIsnIDRow'
      isn_rectriever:
        $ref: '#/definitions/database.GetForDisplayIsnRetrieverByIsnIDRow'
      slug:
        type: string
      storage_connection_url:
        type: string
      storage_type:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.GetForDisplayUserByIsnIDRow'
      visibility:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      email:
        example: example@example.com
        type: string
      password:
        description: passwords must be at least 11 characters long
        example: lkIB53@6O^Y
        type: string
    type: object
  handlers.LoginResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTaWduYWxTZXJ2ZXIiLCJzdWIiOiI2OGZiNWY1Yi1lM2Y1LTRhOTYtOGQzNS1jZDIyMDNhMDZmNzMiLCJleHAiOjE3NDY3NzA2MzQsImlhdCI6MTc0Njc2NzAzNH0.3OdnUNgrvt1Zxs9AlLeaC9DVT6Xwc6uGvFQHb6nDfZs
        type: string
      account_id:
        example: 68fb5f5b-e3f5-4a96-8d35-cd2203a06f73
        type: string
      created_at:
        example: "2025-05-09T05:41:22.57328+01:00"
        type: string
      refresh_token:
        example: fb948e0b74de1f65e801b4e70fc9c047424ab775f2b4dc5226f472f3b6460c37
        type: string
    type: object
  handlers.RefreshAccessTokenHandler.refreshResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTaWduYWxTZXJ2ZXIiLCJzdWIiOiI2OGZiNWY1Yi1lM2Y1LTRhOTYtOGQzNS1jZDIyMDNhMDZmNzMiLCJleHAiOjE3NDY3NzA2MzQsImlhdCI6MTc0Njc2NzAzNH0.3OdnUNgrvt1Zxs9AlLeaC9DVT6Xwc6uGvFQHb6nDfZs
        type: string
    type: object
  handlers.RevokeRefreshTokenHandler.revokeRefreshTokenRequest:
    properties:
      refresh_token:
        example: fb948e0b74de1f65e801b4e70fc9c047424ab775f2b4dc5226f472f3b6460c37
        type: string
    type: object
  handlers.SignalTypeAndLinkedInfo:
    properties:
      created_at:
        type: string
      detail:
        type: string
      id:
        type: string
      isn:
        $ref: '#/definitions/database.Isn'
      readme_url:
        type: string
      schema_url:
        type: string
      sem_ver:
        type: string
      slug:
        type: string
      stage:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  handlers.UpdateIsnReceiverRequest:
    properties:
      default_rate_limit:
        description: maximum number of requests per minute per session
        example: 600
        type: integer
      listener_count:
        example: 1
        type: integer
      max_daily_validation_failures:
        description: default = 0
        example: 5
        type: integer
      max_payload_kilobytes:
        example: 50
        type: integer
      payload_validation:
        enum:
        - always
        - never
        - optional
        example: always
        type: string
      receiver_status:
        enum:
        - offline
        - online
        - error
        - closed
        example: offline
        type: string
    type: object
  handlers.UpdateIsnRequest:
    properties:
      detail:
        example: Sample ISN description
        type: string
      is_in_use:
        example: true
        type: boolean
      storage_connection_url:
        example: postgres:/signalsd:@localhost:5432/signals?sslmode=disable
        type: string
      storage_type:
        example: mq
        type: string
      visibility:
        enum:
        - public
        - private
        example: private
        type: string
    type: object
  handlers.UpdateIsnRetrieverRequest:
    properties:
      default_rate_limit:
        description: maximum number of requests per minute per session
        example: 600
        type: integer
      listener_count:
        example: 1
        type: integer
      retriever_status:
        enum:
        - offline
        - online
        - error
        - closed
        example: offline
        type: string
    type: object
  handlers.UpdatePasswordRequest:
    properties:
      current_password:
        example: lkIB53@6O^Y
        type: string
      new_password:
        example: ue6U>&X3j570
        type: string
    type: object
  handlers.UpdateSignalTypeRequest:
    properties:
      detail:
        description: updated description
        example: description
        type: string
      readme_url:
        description: Updated readme file. Note file must be on a public github repo
        example: https://github.com/user/project/v0.0.1/locales/filename.md
        type: string
      stage:
        description: updated stage
        enum:
        - dev
        - test
        - live
        - deprecated
        - closed
        - shuttered
        type: string
    type: object
  response.ErrorResponse:
    properties:
      error_code:
        allOf:
        - $ref: '#/definitions/apperrors.ErrorCode'
        example: example_error_code
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Signals ISN service API
paths:
  /admin/health:
    get:
      description: check if the signalsd service is running
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Health
      tags:
      - admin
  /admin/reset:
    post:
      description: |-
        Delete all registered users and associated data.
        This endpoint only works on environments configured as 'dev'
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: reset
      tags:
      - admin
  /admin/users/{id}:
    get:
      description: This API is protected (includes email addresses in the response)
        - currently only available on dev envs, pending implementation of admin roles.
      parameters:
      - description: user id
        example: 68fb5f5b-e3f5-4a96-8d35-cd2203a06f73
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.GetUserByIDRow'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get registered user
      tags:
      - auth
  /api/isn:
    get:
      description: get a list of the configured ISNs
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Isn'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get the ISNs
      tags:
      - ISN view
  /api/isn/{isn_slug}:
    post:
      description: |-
        Create an Information Sharing Network (ISN)

        visibility = "private" means that signalsd on the network can only be seen by network participants.

        The only storage_type currently supported is "admin_db"
        when storage_type = "admin_db" the signalsd are stored in the relational database used by the API service to store the admin configuration
        Specify "admin_db" for storage_connection_url in this case (anything else is overriwtten with this value)
      parameters:
      - description: ISN details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateIsnRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateIsnResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Create an ISN
      tags:
      - ISN config
    put:
      description: Update the ISN details
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: ISN details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateIsnRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Update an ISN
      tags:
      - ISN config
  /api/isn/{isn_slug}/signal_types:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.SignalType'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get the signal definitions
      tags:
      - ISN view
    post:
      description: |
        A signal definition describes a data set that is sharable over an ISN.  Setup the ISN before defining any signal defs.

        A URL-friendly slug is created based on the title supplied when you load the first version of a definition.
        The title and slug fields can't be changed and it is not allowed to reuse a slug that was created by another account.

        Slugs are vesioned automatically with semvers: when there is a change to the schema describing the data, the user should create a new definition and specify the bump type (major/minor/patch) to increment the semver

        Signal definitions are referred to with a url like this http://{hostname}/api/isn/{isn_slug}/signal_types/{slug}/v{sem_ver}
      parameters:
      - description: signal definition details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateSignalTypeRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateSignalTypeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Create signal definition
      tags:
      - signal config
  /api/isn/{isn_slug}/signal_types/{slug}/v{sem_ver}:
    delete:
      parameters:
      - description: signal definiton slug
        example: sample-signal--example-org
        in: path
        name: slug
        required: true
        type: string
      - description: version to be recieved
        example: 0.0.1
        in: path
        name: sem_ver
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Delete signal definition
      tags:
      - signal config
    get:
      parameters:
      - description: signal definiton slug
        example: sample-signal--example-org
        in: path
        name: slug
        required: true
        type: string
      - description: version to be recieved
        example: 0.0.1
        in: path
        name: sem_ver
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SignalTypeAndLinkedInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get a signal definition
      tags:
      - ISN view
    put:
      description: |-
        users can update the detailed description, the stage or the link to the readme md

        It is not allowed to update the schema url - instead users should create a new declaration with the same title and bump the version
      parameters:
      - description: signal definiton slug
        example: sample-signal--example-org
        in: path
        name: slug
        required: true
        type: string
      - description: version to be recieved
        example: 0.0.1
        in: path
        name: sem_ver
        required: true
        type: string
      - description: signal definition details to be updated
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateSignalTypeRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Update signal definition
      tags:
      - signal config
  /api/isn/{isn_slug}/signals/receiver:
    get:
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: slug
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.GetIsnReceiverByIsnSlugRow'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get an ISN receiver config
      tags:
      - ISN view
    post:
      description: |-
        An ISN receiver handles the http requests sent by clients that pass Signals to the ISN

        You can specify how many receivers should be started for the ISN and they will listen on an automatically generted port, starting at 8081

        The public facing url will be hosted on https://{isn_host}/isn/{isn_slug}/signals/receiver
        the isn_host will typically be a load balancer or API gateway that proxies requests to the internal signald services

        note receivers are always created in 'offline' mode.
      parameters:
      - description: ISN receiver details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateIsnReceiverRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateIsnReceiverResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Create an ISN Receiver definition
      tags:
      - ISN config
    put:
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: ISN receiver details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateIsnReceiverRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Update an ISN Receiver
      tags:
      - ISN config
  /api/isn/{isn_slug}/signals/retriever:
    get:
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: slug
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.GetIsnRetrieverByIsnSlugRow'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get an ISN retriever config
      tags:
      - ISN view
    post:
      description: |-
        An ISN retriever handles the http requests sent by clients to get Signals from the ISN

        You can specify how many retrievers should be started for the ISN and they will listen on an automatically generted port

        The public facing url will be hosted on https://{isn_host}/isn/{isn_slug}/signals/retriever
        the isn_host will typically be a load balancer or API gateway that proxies requests to the internal signald services

        note retrievers are created in 'offline' mode.
      parameters:
      - description: ISN retriever details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateIsnRetrieverRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateIsnRetrieverResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Create an ISN Retriever definition
      tags:
      - ISN config
    put:
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: ISN retriever details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateIsnRetrieverRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Update an ISN Retriever
      tags:
      - ISN config
  /api/isn/{slug}:
    get:
      description: Returns details about the ISN plus details of any configured receivers/retrievers
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.IsnAndLinkedInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get an ISN configuration
      tags:
      - ISN view
  /api/users:
    get:
      description: This api displays email addresses and is currently only available
        on dev env pending implementation of role based access
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.GetUsersRow'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get the registered users
      tags:
      - auth
  /auth/login:
    post:
      description: |-
        The response body includes an access token and a refresh_token.
        The access_token is valid for 1 hour.

        Use the refresh_token with the /auth/refresh-token endpoint to renew the access_token.
        The refresh_token lasts 60 days unless it is revoked earlier.
        To renew the refresh_token, log in again.
      parameters:
      - description: email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login
      tags:
      - auth
  /auth/password/reset:
    put:
      description: |-
        Use this api to reset the user's password.  Requires a valid access token and the current password

        TODO - forgotten password facility
      parameters:
      - description: user details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdatePasswordRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Reset password
      tags:
      - auth
  /auth/refresh-token:
    post:
      description: |-
        Use this endpoint to get a new access token.
        Access tokens expire after an hour and subsequent requests using the token will fail with an error_code of "access_token_expired"

        You need to supply a vaild refresh_token to use this API.
        If the refresh token has expired ("refresh_token_expired") or been revoked ("refresh_token_revoked") the user must login again to get a new one.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RefreshAccessTokenHandler.refreshResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerRefreshToken: []
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      description: |-
        The first user to be created for this service will be created with an admin role.
        Subsequent accounts default to standard user roles.
      parameters:
      - description: user details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create user
      tags:
      - auth
  /auth/revoke-refresh-token:
    post:
      description: |-
        Revoke a refresh token to prevent it being used to create new access tokens.

        Note that any unexpired access tokens issued for this user will continue to work until they expire.
        Users must log in again to obtain a new refresh token if the current one has been revoked.

        Anyone in possession of a refresh token can revoke it
      parameters:
      - description: refresh token to be revoked
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RevokeRefreshTokenHandler.revokeRefreshTokenRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Revoke refresh token
      tags:
      - auth
produces:
- application/json
securityDefinitions:
  BearerAccessToken:
    description: Bearer {JWT access token}
    in: header
    name: Authorization
    type: apiKey
  BearerRefreshToken:
    description: Bearer { refresh token }
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: User and token management endpoints
  name: auth
- description: signal definitions describe the format of the data being shared in
    an ISN
  name: signal config
- description: Information sharing networks are used to exchange signalsd between
    participating users.
  name: ISN config
- description: View information about the configured ISNs
  name: ISN view
