consumes:
- application/json
definitions:
  apperrors.ErrorCode:
    enum:
    - access_token_expired
    - authentication_error
    - authorization_error
    - database_error
    - forbidden
    - internal_error
    - invalid_request
    - malformed_body
    - not_implemented
    - password_too_short
    - refresh_token_invalid
    - resource_already_exists
    - resource_not_found
    - token_invalid
    type: string
    x-enum-varnames:
    - ErrCodeAccessTokenExpired
    - ErrCodeAuthenticationFailure
    - ErrCodeAuthorizationFailure
    - ErrCodeDatabaseError
    - ErrCodeForbidden
    - ErrCodeInternalError
    - ErrCodeInvalidRequest
    - ErrCodeMalformedBody
    - ErrCodeNotImplemented
    - ErrCodePasswordTooShort
    - ErrCodeRefreshTokenInvalid
    - ErrCodeResourceAlreadyExists
    - ErrCodeResourceNotFound
    - ErrCodeTokenInvalid
  auth.AccessTokenResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTaWduYWxTZXJ2ZXIiLCJzdWIiOiI2OGZiNWY1Yi1lM2Y1LTRhOTYtOGQzNS1jZDIyMDNhMDZmNzMiLCJleHAiOjE3NDY3NzA2MzQsImlhdCI6MTc0Njc2NzAzNH0.3OdnUNgrvt1Zxs9AlLeaC9DVT6Xwc6uGvFQHb6nDfZs
        type: string
      account_id:
        example: a38c99ed-c75c-4a4a-a901-c9485cf93cf3
        type: string
      account_type:
        enum:
        - user
        - service_identity
        type: string
      expires_in:
        description: seconds
        example: 1800
        type: integer
      isn_perms:
        additionalProperties:
          $ref: '#/definitions/auth.IsnPerms'
        description: todo - perms
        type: object
      role:
        enum:
        - owner
        - admin
        - member
        example: admin
        type: string
      token_type:
        example: Bearer
        type: string
    type: object
  auth.IsnPerms:
    properties:
      permission:
        enum:
        - read
        - write
        example: read
        type: string
      signal_types:
        description: list of available signal types for the isn
        items:
          type: string
        type: array
    type: object
  database.GetForDisplayIsnReceiverByIsnIDRow:
    properties:
      created_at:
        type: string
      default_rate_limit:
        type: integer
      listener_count:
        type: integer
      max_daily_validation_failures:
        type: integer
      max_payload_kilobytes:
        type: integer
      payload_validation:
        type: string
      receiver_status:
        type: string
      updated_at:
        type: string
    type: object
  database.GetForDisplayIsnRetrieverByIsnIDRow:
    properties:
      created_at:
        type: string
      default_rate_limit:
        type: integer
      listener_count:
        type: integer
      retriever_status:
        type: string
      updated_at:
        type: string
    type: object
  database.GetForDisplayUserByIsnIDRow:
    properties:
      account_id:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  database.GetIsnReceiverByIsnSlugRow:
    properties:
      created_at:
        type: string
      default_rate_limit:
        type: integer
      isn_id:
        type: string
      isn_is_in_use:
        type: boolean
      listener_count:
        type: integer
      max_daily_validation_failures:
        type: integer
      max_payload_kilobytes:
        type: integer
      payload_validation:
        type: string
      receiver_status:
        type: string
      updated_at:
        type: string
    type: object
  database.GetIsnRetrieverByIsnSlugRow:
    properties:
      created_at:
        type: string
      default_rate_limit:
        type: integer
      isn_id:
        type: string
      isn_is_in_use:
        type: boolean
      listener_count:
        type: integer
      retriever_status:
        type: string
      updated_at:
        type: string
    type: object
  database.GetUserByIDRow:
    properties:
      account_id:
        type: string
      created_at:
        type: string
      email:
        type: string
      user_role:
        type: string
    type: object
  database.GetUsersRow:
    properties:
      account_id:
        type: string
      created_at:
        type: string
      email:
        type: string
      updated_at:
        type: string
      user_role:
        type: string
    type: object
  database.Isn:
    properties:
      created_at:
        type: string
      detail:
        type: string
      id:
        type: string
      is_in_use:
        type: boolean
      slug:
        type: string
      storage_connection_url:
        type: string
      storage_type:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_account_id:
        type: string
      visibility:
        type: string
    type: object
  database.SignalType:
    properties:
      created_at:
        type: string
      detail:
        type: string
      id:
        type: string
      is_in_use:
        type: boolean
      isn_id:
        type: string
      readme_url:
        type: string
      schema_url:
        type: string
      sem_ver:
        type: string
      slug:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  handlers.CreateIsnReceiverRequest:
    properties:
      default_rate_limit:
        description: maximum number of requests per minute per session
        example: 600
        type: integer
      isn_slug:
        example: sample-isn--example-org
        type: string
      listener_count:
        example: 1
        type: integer
      max_daily_validation_failures:
        description: default = 0
        example: 5
        type: integer
      max_payload_kilobytes:
        example: 50
        type: integer
      payload_validation:
        enum:
        - always
        - never
        - optional
        example: always
        type: string
    type: object
  handlers.CreateIsnReceiverResponse:
    properties:
      resource_url:
        example: http://localhost:8080/api/isn/sample-isn--example-org/signals/receiver
        type: string
    type: object
  handlers.CreateIsnRequest:
    properties:
      detail:
        example: Sample ISN description
        type: string
      is_in_use:
        example: true
        type: boolean
      storage_connection_url:
        example: postgres:/signalsd:@localhost:5432/signals?sslmode=disable
        type: string
      storage_type:
        example: mq
        type: string
      title:
        example: Sample ISN @example.org
        type: string
      visibility:
        enum:
        - public
        - private
        example: private
        type: string
    type: object
  handlers.CreateIsnResponse:
    properties:
      id:
        example: 67890684-3b14-42cf-b785-df28ce570400
        type: string
      resource_url:
        example: http://localhost:8080/api/isn/sample-isn--example-org
        type: string
      slug:
        example: sample-isn--example-org
        type: string
    type: object
  handlers.CreateIsnRetrieverRequest:
    properties:
      default_rate_limit:
        description: maximum number of requests per minute per session
        example: 600
        type: integer
      isn_slug:
        example: sample-isn--example-org
        type: string
      listener_count:
        example: 1
        type: integer
    type: object
  handlers.CreateIsnRetrieverResponse:
    properties:
      resource_url:
        example: http://localhost:8080/api/isn/sample-isn--example-org/signals/retriever
        type: string
    type: object
  handlers.CreateSignalTypeRequest:
    properties:
      bump_type:
        description: this is used to increment semver for the signal definition
        enum:
        - major
        - minor
        - patch
        example: patch
        type: string
      detail:
        description: updated description
        example: description
        type: string
      readme_url:
        description: Updated readme file. Note file must be on a public github repo
        example: https://github.com/user/project/v0.0.1/locales/filename.md
        type: string
      schema_url:
        description: Note file must be on a public github repo
        example: https://github.com/user/project/v0.0.1/locales/filename.json
        type: string
      title:
        description: unique title
        example: Sample Signal @example.org
        type: string
    type: object
  handlers.CreateSignalTypeResponse:
    properties:
      resource_url:
        example: http://localhost:8080/api/isn/sample-isn--example-org/signals_types/sample-signal--example-org/v0.0.1
        type: string
      sem_ver:
        example: 0.0.1
        type: string
      slug:
        example: sample-signal--example-org
        type: string
    type: object
  handlers.CreateSignalsBatchResponse:
    properties:
      account_id:
        example: a38c99ed-c75c-4a4a-a901-c9485cf93cf3
        type: string
      resource_url:
        example: http://localhost:8080/api/isn/sample-isn--example-org/account/{account_id}/batch/{signals_batch_id}
        type: string
      signals_batch_id:
        example: b51faf05-aaed-4250-b334-2258ccdf1ff2
        type: string
    type: object
  handlers.CreateUserRequest:
    properties:
      email:
        example: example@example.com
        type: string
      password:
        description: passwords must be at least 11 characters long
        example: lkIB53@6O^Y
        type: string
    type: object
  handlers.IsnAndLinkedInfo:
    properties:
      created_at:
        type: string
      detail:
        type: string
      id:
        type: string
      is_in_use:
        type: boolean
      isn_receiver:
        $ref: '#/definitions/database.GetForDisplayIsnReceiverByIsnIDRow'
      isn_rectriever:
        $ref: '#/definitions/database.GetForDisplayIsnRetrieverByIsnIDRow'
      slug:
        type: string
      storage_connection_url:
        type: string
      storage_type:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.GetForDisplayUserByIsnIDRow'
      visibility:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      email:
        example: example@example.com
        type: string
      password:
        description: passwords must be at least 11 characters long
        example: lkIB53@6O^Y
        type: string
    type: object
  handlers.SignalTypeAndLinkedInfo:
    properties:
      created_at:
        type: string
      detail:
        type: string
      id:
        type: string
      is_in_use:
        type: boolean
      isn:
        $ref: '#/definitions/database.Isn'
      readme_url:
        type: string
      schema_url:
        type: string
      sem_ver:
        type: string
      slug:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  handlers.UpdateIsnReceiverRequest:
    properties:
      default_rate_limit:
        description: maximum number of requests per minute per session
        example: 600
        type: integer
      listener_count:
        example: 1
        type: integer
      max_daily_validation_failures:
        description: default = 0
        example: 5
        type: integer
      max_payload_kilobytes:
        example: 50
        type: integer
      payload_validation:
        enum:
        - always
        - never
        - optional
        example: always
        type: string
      receiver_status:
        enum:
        - offline
        - online
        - error
        - closed
        example: offline
        type: string
    type: object
  handlers.UpdateIsnRequest:
    properties:
      detail:
        example: Sample ISN description
        type: string
      is_in_use:
        example: true
        type: boolean
      storage_connection_url:
        example: postgres:/signalsd:@localhost:5432/signals?sslmode=disable
        type: string
      storage_type:
        example: mq
        type: string
      visibility:
        enum:
        - public
        - private
        example: private
        type: string
    type: object
  handlers.UpdateIsnRetrieverRequest:
    properties:
      default_rate_limit:
        description: maximum number of requests per minute per session
        example: 600
        type: integer
      listener_count:
        example: 1
        type: integer
      retriever_status:
        enum:
        - offline
        - online
        - error
        - closed
        example: offline
        type: string
    type: object
  handlers.UpdatePasswordRequest:
    properties:
      current_password:
        example: lkIB53@6O^Y
        type: string
      new_password:
        example: ue6U>&X3j570
        type: string
    type: object
  handlers.UpdateSignalTypeRequest:
    properties:
      detail:
        description: updated description
        example: description
        type: string
      is_in_use:
        example: false
        type: boolean
      readme_url:
        description: Updated readme file. Note file must be on a public github repo
        example: https://github.com/user/project/v0.0.1/locales/filename.md
        type: string
    type: object
  responses.ErrorResponse:
    properties:
      error_code:
        allOf:
        - $ref: '#/definitions/apperrors.ErrorCode'
        example: example_error_code
      message:
        example: message describing the error
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Signals ISN service API
paths:
  /admin/live:
    get:
      description: check if the signalsd service is up
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Liveness check
      tags:
      - Site admin
  /admin/reset:
    post:
      description: |-
        Delete all registered users and associated data.
        This endpoint only works on environments configured as 'dev'
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: reset
      tags:
      - Site admin
  /admin/users/{id}:
    get:
      description: This API is protected (includes email addresses in the response)
        - currently only available on dev envs, pending implementation of admin roles.
      parameters:
      - description: user id
        example: 68fb5f5b-e3f5-4a96-8d35-cd2203a06f73
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.GetUserByIDRow'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get registered user
      tags:
      - auth
  /api/isn:
    get:
      description: get a list of the configured ISNs
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Isn'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get the ISNs
      tags:
      - ISN view
  /api/isn/{isn_slug}:
    post:
      description: |-
        Create an Information Sharing Network (ISN)

        visibility = "private" means that signalsd on the network can only be seen by network participants.

        The only storage_type currently supported is "admin_db"
        when storage_type = "admin_db" the signalsd are stored in the relational database used by the API service to store the admin configuration
        Specify "admin_db" for storage_connection_url in this case (anything else is overriwtten with this value)

        This endpoint can only be used by the site owner or an admin
      parameters:
      - description: ISN details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateIsnRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateIsnResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      - RefreshTokenCookieAuth: []
      summary: Create an ISN
      tags:
      - ISN config
    put:
      description: |-
        Update the ISN details
        This endpoint can only be used by the site owner or the ISN admin
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: ISN details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateIsnRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Update an ISN
      tags:
      - ISN config
  /api/isn/{isn_slug}/signal_types:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.SignalType'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get the signal definitions
      tags:
      - ISN view
    post:
      description: |
        A signal type describes a data set that is sharable over an ISN.  Setup the ISN before defining any signal defs.
        Signal types specify a record that can be shared over the ISN
        - Each type has a unique title
        - A URL-friendly slug is created based on the title supplied when you load the first version of a definition.
        - The title and slug fields can't be changed and it is not allowed to reuse a slug that was created by another account.
        - The field definition is held as an external json schema file

        Versions
        - A signal type can have multiple versions - these share the same title/slug but have different json schemas.
        - use this endpoint to create the first version - the bump_type (major/minor/patch) determines the inital semver(1.0.0, 0.1.0 or 0.0.1)
        - subsequent POSTs to this endpoint that reference a previously sumbitted title/slug but point to a different schema will increment the version

        Signal type definitions are referred to with a url like this http://{hostname}/api/isn/{isn_slug}/signal_types/{slug}/v{sem_ver}
      parameters:
      - description: signal definition details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateSignalTypeRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateSignalTypeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Create signal type definition
      tags:
      - signal config
  /api/isn/{isn_slug}/signal_types/{slug}/v{sem_ver}:
    get:
      parameters:
      - description: signal definiton slug
        example: sample-signal--example-org
        in: path
        name: slug
        required: true
        type: string
      - description: version to be recieved
        example: 0.0.1
        in: path
        name: sem_ver
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SignalTypeAndLinkedInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get a signal definition
      tags:
      - ISN view
    put:
      description: |-
        users can mark the signal type as *in use/not in use* and update the description or link to the readme file

        It is not allowed to update the schema url - instead users should create a new declaration with the same title and bump the version
      parameters:
      - description: signal definiton slug
        example: sample-signal--example-org
        in: path
        name: slug
        required: true
        type: string
      - description: Sem ver
        example: 0.0.1
        in: path
        name: sem_ver
        required: true
        type: string
      - description: signal type details to be updated
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateSignalTypeRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Update signal definition
      tags:
      - signal config
  /api/isn/{isn_slug}/signals/accounts/{account_id}/batches:
    get:
      description: |-
        TODO - get latest, previous, by data ranage
        TODO
      responses: {}
      summary: Get details about a set of signal batches
      tags:
      - Signals Management
  /api/isn/{isn_slug}/signals/accounts/{account_id}/batches/{signals_batch_id}:
    get:
      description: TODO - get by id. Include status (errs, received, latest localref
        in batch)
      responses: {}
      summary: Get a signal batch
      tags:
      - Signals Management
  /api/isn/{isn_slug}/signals/batches:
    post:
      description: |
        This endpoint is used by service accounts to create a new batch used to track signals sent to the specified isn

        For user accounts, a batch is automatically created when they are granted write permission to an isn and is only closed if their permission to write to the isn is revoked

        For service accounts, the client app can decide how long to keep a batch open
        (a batch status summary is sent to a webhook after the batch closes)

        opening a batch closes the previous batch created on the isn for this account.

        Signals can only be sent to open batches.

        authentication is based on the supplied access token:
        (the site owner; the isn admin and members with an isn_perm= write can create a batch)
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateSignalsBatchResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Create a new signal batch
      tags:
      - Signals Management
  /api/isn/{isn_slug}/signals/receiver:
    get:
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: slug
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.GetIsnReceiverByIsnSlugRow'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get an ISN receiver config
      tags:
      - ISN view
    post:
      description: |-
        An ISN receiver handles the http requests sent by clients that pass Signals to the ISN

        You can specify how many receivers should be started for the ISN and they will listen on an automatically generted port, starting at 8081

        The public facing url will be hosted on https://{isn_host}/isn/{isn_slug}/signals/receiver
        the isn_host will typically be a load balancer or API gateway that proxies requests to the internal signald services

        note receivers are always created in 'offline' mode.

        This endpoint can only be used by the site owner or the ISN admin
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: ISN receiver details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateIsnReceiverRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateIsnReceiverResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Create an ISN Receiver definition
      tags:
      - ISN config
    put:
      description: This endpoint can only be used by the site owner or the ISN admin
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: ISN receiver details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateIsnReceiverRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Update an ISN Receiver
      tags:
      - ISN config
  /api/isn/{isn_slug}/signals/retriever:
    get:
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: slug
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.GetIsnRetrieverByIsnSlugRow'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get an ISN retriever config
      tags:
      - ISN view
    post:
      description: |-
        An ISN retriever handles the http requests sent by clients to get Signals from the ISN

        You can specify how many retrievers should be started for the ISN and they will listen on an automatically generted port

        The public facing url will be hosted on https://{isn_host}/isn/{isn_slug}/signals/retriever
        the isn_host will typically be a load balancer or API gateway that proxies requests to the internal signald services

        note retrievers are created in 'offline' mode.

        This endpoint can only be used by the site owner or the ISN admin
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: ISN retriever details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateIsnRetrieverRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateIsnRetrieverResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Create an ISN Retriever definition
      tags:
      - ISN config
    put:
      description: This endpoint can only be used by the site owner or the ISN admin
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: ISN retriever details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateIsnRetrieverRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Update an ISN Retriever
      tags:
      - ISN config
  /api/isn/{slug}:
    get:
      description: Returns details about the ISN plus details of any configured receivers/retrievers
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.IsnAndLinkedInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get an ISN configuration
      tags:
      - ISN view
  /api/users:
    get:
      description: This api displays email addresses and is currently only available
        on dev env pending implementation of role based access
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.GetUsersRow'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get the registered users
      tags:
      - auth
  /auth/admins/{account_id}:
    delete:
      description: this endpoint can only be used by the site owner account
      parameters:
      - description: account id
        example: a38c99ed-c75c-4a4a-a901-c9485cf93cf3
        in: path
        name: account_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Revoke account admin role
      tags:
      - auth
  /auth/admins/account/{account_id}:
    put:
      description: |-
        This endpoint grants the admin role to a site member

        An admin can:
        - Create an ISN
        - Define the signal_types used in the ISN
        - read/write to their own ISNs
        - Grant other accounts read or write access to their ISNs
        - Create service identities ('service accounts')

        this endpoint can only be used by the site owner account
      parameters:
      - description: account id
        example: a38c99ed-c75c-4a4a-a901-c9485cf93cf3
        in: path
        name: account_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Grant admin role
      tags:
      - auth
  /auth/login:
    post:
      description: |-
        The response body includes an access token. A refresh token is included in a http-only cookie named refresh_token
        The access_token is valid for 30 mins.

        Use the refresh_token with the /auth/refresh endpoint to renew the access_token.

        The refresh_token lasts 30 days unless it is revoked earlier.
        To renew the refresh_token, log in again.
      parameters:
      - description: email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Login
      tags:
      - auth
  /auth/password/reset:
    put:
      description: |-
        Use this api to reset the user's password.  Requires a valid access token and the current password

        TODO - forgotten password facility
      parameters:
      - description: user details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdatePasswordRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: 'Bad request with possible error codes: malformed_body, password_too_short'
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: 'Unauthorized with possible error code: authentication_error'
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: 'Internal server error with possible error codes: database_error,
            internal_error'
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Reset password
      tags:
      - auth
  /auth/register:
    post:
      description: |-
        The first user to be created for this service will be created with an admin role.
        Subsequent accounts default to standard member roles.
        New members can't access any information beyond the public data on the site until an admin grants them access to an ISN.
      parameters:
      - description: user details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserRequest'
      responses:
        "201":
          description: Created
        "400":
          description: 'Bad request with possible error codes: malformed_body, password_too_short'
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "409":
          description: Conflict with possible error code:resource_already_exists
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: 'Internal server error with possible error codes: database_error,
            internal_error'
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Register user
      tags:
      - auth
  /auth/revoke:
    post:
      description: |
        Revoke a refresh token to prevent it being used to create new access tokens.

        You need to supply a vaild refresh token to use this API - if the refresh token has expired or been revoked the user must login again to get a new one.

        The refresh token should be supplied in a http-only cookie called refresh_token.

        You must also provide a previously issued bearer access token - it does not matter if it has expired
        (the token is not used to authenticate the request but is needed to establish the ID of the user making the request)

        Note that any unexpired access tokens issued for this user will continue to work until they expire.
        Users must log in again to obtain a new refresh token if the current one has been revoked.
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerRefreshToken: []
      summary: Revoke refresh token
      tags:
      - auth
  /auth/token:
    post:
      description: |
        Use this endpoint to get a new access token.

        You need to supply a vaild refresh token to use this API - if the refresh token has expired or been revoked the user must login again to get a new one.

        The refresh token should be supplied in a http-only cookie called refresh_token.

        You must also provide a previously issued bearer access token - it does not matter if it has expired
        (the token is not used to authenticate the request but is needed to establish the ID of the user making the request)

        Note this action automatically revokes the current refresh_token and issues a new one.

        The new refresh token is sent in an http-only cookie named refresh_token.
        In production deployments the secure flag (https only) on the cookie will be set to true

        Access tokens expire after 30 mins and subsequent requests using the token will fail with an error_code of "access_token_expired"
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerRefreshToken: []
      summary: Refresh access token
      tags:
      - auth
  /health/ready:
    get:
      description: check if the signalsd service is ready
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Readiness
      tags:
      - Site admin
  /isn/{isn_slug}/accounts/{account_id}:
    delete:
      description: |-
        Revoke an account read or write access to an isn.
        This end point can only be used by the site owner or the isn admin account.
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: account id
        example: a38c99ed-c75c-4a4a-a901-c9485cf93cf3
        in: path
        name: account_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Revoke ISN access permission
      tags:
      - ISN Permissions
    put:
      description: |-
        Grant an account read or write access to an isn.
        This end point can only be used by the site owner or the isn admin account.
      parameters:
      - description: isn slug
        example: sample-isn--example-org
        in: path
        name: isn_slug
        required: true
        type: string
      - description: account id
        example: a38c99ed-c75c-4a4a-a901-c9485cf93cf3
        in: path
        name: account_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - BearerAccessToken: []
      summary: Grant ISN access permission
      tags:
      - ISN Permissions
  /isn/{isn_slug}/signal_types/{signal_type_slug}/signals:
    post:
      description: |-
        - the client can submit arrays of signals for a single type in a single req (subject to the size
        limits defined on the signal type definition)
        - The client-supplied local_ref must uniquely identify each signal of the
        specified signal type that will be supplied by the account.
        - If a local reference is received more than once from an account for a
        specified signal_type it will be stored with a incremented version number
        and the previous version will be marked as latest=false (it does not matter
        if the previous signal was received in a different batch, but the signal must
        be owned by the same account).
        - If a deletion request is received, all version of the signal will be marked
        as 'withdrawn'.
        - Correlation_ids are auto generated on the server unless supplied by the client, in which case they are used to identify another signal that this signal is related to. The correlated signal does not need to be owned by the same account.
      responses: {}
      summary: send one or more signals
      tags:
      - Signals Management
  /webhooks:
    post:
      description: TODO - register a webhook to recieve signals batch status updates
      responses: {}
      summary: Register webhook
      tags:
      - Signals Management
produces:
- application/json
securityDefinitions:
  BearerAccessToken:
    description: Bearer {JWT access token}
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: User and token management endpoints
  name: auth
- description: signal definitions describe the format of the data being shared in
    an ISN
  name: signal config
- description: Information sharing networks are used to exchange signalsd between
    participating users.
  name: ISN config
- description: View information about the configured ISNs
  name: ISN view
- description: Site adminstration tools
  name: Site admin
