# Multi-Container Performance Test Setup
# Uses existing shared database at localhost:15432
# uses existing binary from host. This can be used to compare specific version performance:
# e.g
# 1. git checkout v0.7.1
# 2. build.sh -lb (build linux binary from source)
# 3. cd test/perf && docker compose -f docker-compose.multi.app.yml up 

services:

  # Load Balancer (nginx)
  loadbalancer:
    image: nginx:alpine
    container_name: signalsd-lb-multi
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - signals1
      - signals2
      - signals3
      - admin
    networks:
      - multi-app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Signals Container 1
  signals1:
    build:
      context: ../..
      dockerfile_inline: |
        FROM golang:1.24-alpine
        RUN apk add --no-cache bash postgresql-client curl jq vim git
        WORKDIR /signalsd
        CMD ["/bin/bash"]
    container_name: signalsd-signals1-multi
    volumes:
      - ../..:/signalsd
      - go-modules-multi:/go/pkg/mod
    environment:
      DOCKER_ENV: true
      SECRET_KEY: "multi-container-test-secret-key-12345"
      DATABASE_URL: postgres://signalsd-dev:@host.docker.internal:15432/signalsd_admin?sslmode=disable
      ENVIRONMENT: perf
      RATE_LIMIT_RPS: 0
      APP_INSTANCE: "signals1"
      READ_TIMEOUT: "300s"
      WRITE_TIMEOUT: "300s"
      IDLE_TIMEOUT: "300s"
      MAX_SIGNAL_PAYLOAD_SIZE: ${MAX_SIGNAL_PAYLOAD_SIZE}
    working_dir: /signalsd
    ports:
      - "8082:8080"  # Expose for direct testing
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      sh -c "/signalsd/app/signalsd -m signals"
    networks:
      - multi-app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  # Signals Container 2
  signals2:
    build:
      context: ../..
      dockerfile_inline: |
        FROM golang:1.24-alpine
        WORKDIR /signalsd
        CMD ["/bin/bash"]
    container_name: signalsd-signals2-multi
    volumes:
      - ../..:/signalsd
      - go-modules-multi:/go/pkg/mod
    environment:
      DOCKER_ENV: true
      SECRET_KEY: "multi-container-test-secret-key-12345"
      DATABASE_URL: postgres://signalsd-dev:@host.docker.internal:15432/signalsd_admin?sslmode=disable
      ENVIRONMENT: perf
      RATE_LIMIT_RPS: 0
      APP_INSTANCE: "signals2"
      # Increase timeouts for large batch processing
      READ_TIMEOUT: "300s"
      WRITE_TIMEOUT: "300s"
      IDLE_TIMEOUT: "300s"
      MAX_SIGNAL_PAYLOAD_SIZE: ${MAX_SIGNAL_PAYLOAD_SIZE}
    working_dir: /signalsd
    ports:
      - "8083:8080"  # Expose for direct testing
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      sh -c "/signalsd/app/signalsd -m signals"
    networks:
      - multi-app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  # Signals Container 3
  signals3:
    build:
      context: ../..
      dockerfile_inline: |
        FROM golang:1.24-alpine
        WORKDIR /signalsd
        CMD ["/bin/bash"]
    container_name: signalsd-signals3-multi
    volumes:
      - ../..:/signalsd
      - go-modules-multi:/go/pkg/mod
    environment:
      DOCKER_ENV: true
      SECRET_KEY: "multi-container-test-secret-key-12345"
      DATABASE_URL: postgres://signalsd-dev:@host.docker.internal:15432/signalsd_admin?sslmode=disable
      ENVIRONMENT: perf
      RATE_LIMIT_RPS: 0
      APP_INSTANCE: "signals3"
      # Increase timeouts for large batch processing
      READ_TIMEOUT: "300s"
      WRITE_TIMEOUT: "300s"
      IDLE_TIMEOUT: "300s"
      MAX_SIGNAL_PAYLOAD_SIZE: ${MAX_SIGNAL_PAYLOAD_SIZE}
    working_dir: /signalsd
    ports:
      - "8084:8080"  # Expose for direct testing
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      sh -c "/signalsd/app/signalsd -m signals"
    networks:
      - multi-app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  # Admin Container
  admin:
    build:
      context: ../..
      dockerfile_inline: |
        FROM golang:1.24-alpine
        WORKDIR /signalsd
        CMD ["/bin/bash"]
    container_name: signalsd-admin-multi
    volumes:
      - ../..:/signalsd
      - go-modules-multi:/go/pkg/mod
    environment:
      DOCKER_ENV: true
      SECRET_KEY: "multi-container-test-secret-key-12345"
      DATABASE_URL: postgres://signalsd-dev:@host.docker.internal:15432/signalsd_admin?sslmode=disable
      ENVIRONMENT: perf
      RATE_LIMIT_RPS: 0
      APP_INSTANCE: "admin"
    working_dir: /signalsd
    ports:
      - "8085:8080"  # Expose for direct testing
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      sh -c "/signalsd/app/signalsd -m admin"
    networks:
      - multi-app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
networks:
  multi-app-network:
    driver: bridge

volumes:
  go-modules-multi:
