# docker-compose.yml (development env - mounts the local repo directory)
services:
  db:
    image: postgres:17-alpine
    restart: unless-stopped
    container_name: signalsd-db-dev
    volumes:
      - db-data-dev:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: signalsd-dev
      POSTGRES_DB: signalsd_admin

    healthcheck:
      test: ["CMD-SHELL", "psql -U signalsd-dev -d signalsd_admin -c 'select 1;'"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2048M

  app:
    build:
      context: .
      dockerfile_inline: |
        FROM golang:1.24-alpine
        RUN apk add --no-cache bash postgresql-client curl jq vim git
        RUN echo "Installing Go tools..." && \
            go install github.com/pressly/goose/v3/cmd/goose@latest && \
            go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest && \
            go install github.com/swaggo/swag/cmd/swag@latest && \
            echo "Go tools installation complete"
        WORKDIR /signalsd
        CMD ["/bin/bash"]
    container_name: signalsd-app-dev
    volumes:
      - ./:/signalsd # project dir
      - go-modules:/go/pkg/mod # persist downloaded modules
    environment:
      DOCKER_ENV: true
      # Required
      SECRET_KEY: ${SECRET_KEY:-dev-container-secret-key-12345}
      DATABASE_URL: ${DATABASE_URL:-postgres://signalsd-dev:@db:5432/signalsd_admin?sslmode=disable}

      # Server Configuration
      HOST: ${HOST:-0.0.0.0}
      PORT: ${PORT:-8080}
      ENVIRONMENT: ${ENVIRONMENT:-dev}
      LOG_LEVEL: ${LOG_LEVEL:-debug}

      # Performance Tuning
      READ_TIMEOUT: ${READ_TIMEOUT:-15s}
      WRITE_TIMEOUT: ${WRITE_TIMEOUT:-15s}
      IDLE_TIMEOUT: ${IDLE_TIMEOUT:-60s}
      RATE_LIMIT_RPS: ${RATE_LIMIT_RPS:-100}
      RATE_LIMIT_BURST: ${RATE_LIMIT_BURST:-20}
      MAX_SIGNAL_PAYLOAD_SIZE: ${MAX_SIGNAL_PAYLOAD_SIZE:-5242880}

      # Security
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-*}
    working_dir: /signalsd
    ports:
      - "8080:8080" 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      sh -c "/signalsd/entrypoint.sh -e local-dev"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

networks:
  app-network:
    driver: bridge

volumes:
  db-data-dev:
  go-modules:
